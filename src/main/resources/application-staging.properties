# Staging environment configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# PostgreSQL Configuration (will be provided by deployment environment)
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# AWS Configuration for staging
spring.cloud.aws.region.static=${AWS_REGION:us-east-1}
aws.s3.bucket-name=${S3_BUCKET_NAME:eventr-staging}
aws.dynamodb.table-name=${DYNAMODB_TABLE:eventr-staging-table}

# CORS Configuration for Staging
cors.allowed-origins=https://staging.yourdomain.com,https://admin-staging.yourdomain.com
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
cors.allowed-headers=Content-Type,Authorization,X-Requested-With,Accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers,X-CSRF-Token
cors.allow-credentials=true
cors.max-age=1800

# Email configuration for staging
spring.mail.host=${SMTP_HOST}
spring.mail.port=${SMTP_PORT:587}
spring.mail.username=${SMTP_USERNAME}
spring.mail.password=${SMTP_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Logging for staging
logging.level.com.eventr=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate=WARN
logging.level.org.springframework.security=DEBUG

# Security
server.ssl.enabled=true
server.port=8443