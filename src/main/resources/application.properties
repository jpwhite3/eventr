
# PostgreSQL Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/eventr
spring.datasource.username=<your-postgres-username>
spring.datasource.password=<your-postgres-password>
spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# AWS Configuration
aws.s3.bucket-name=eventr-bucket
aws.dynamodb.table-name=event-form-definitions

# It's recommended to use IAM roles or environment variables for credentials in production.
# For local development, you can use the following properties.
spring.cloud.aws.credentials.access-key=test
spring.cloud.aws.credentials.secret-key=test
spring.cloud.aws.region.static=us-east-1

# Disable AWS endpoint validation for local development
spring.cloud.aws.endpoint.enabled=false

# Allow bean definition overriding for test configurations
spring.main.allow-bean-definition-overriding=true
spring.cloud.aws.s3.endpoint=http://localhost:4566
spring.cloud.aws.dynamodb.endpoint=http://localhost:4566

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=15MB
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=1MB

# CORS Configuration (Production defaults - restrictive)
cors.allowed-origins=https://yourdomain.com
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=Content-Type,Authorization,X-Requested-With,Accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers
cors.allow-credentials=true
cors.max-age=1800

# Email Configuration
spring.mail.host=smtp.example.com
spring.mail.port=587
spring.mail.username=<your-email-username>
spring.mail.password=<your-email-password>
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
